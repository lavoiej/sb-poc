name: Main CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout git repo
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2.0.1
      with:
        arguments: build
    
    - name: Upload generated artifact
      uses: actions/upload-artifact@v2
      with:
        name: Package
        path: build/libs/*.jar
        
  sonar:
    if: ${{ false }}
    name: code analysis
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonarqube --info
        
  deploy-dev:
    if: github.event_name != 'pull_request'
    needs: sonar
    runs-on: ubuntu-latest
    environment:
      name: dev
    steps:
    - name: Download JAR
      uses: actions/download-artifact@v2
      with:
        name: Package
    - name: Deploy to EB
      run: "ls -la"
      
  deploy-staging:
    if: github.event_name != 'pull_request'
    needs: deploy-dev
    environment:
      name: staging
    runs-on: ubuntu-latest
    
    steps:
    - name: Download JAR
      uses: actions/download-artifact@v2
      with:
        name: Package
    - name: Deploy to EB
      run: "ls -la"
